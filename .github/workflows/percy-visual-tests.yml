###
# Workflow which runs Percy Visual Tests for each PR
###

name: Percy Visual Testing
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "app/**"

jobs:
  run-visual-tests:
    runs-on: ubuntu-latest
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: NPM Install Packages
        working-directory: ./app
        run: npm clean-install

      - name: Disable Cloudflare Bot Fight
        id: disable-bot-fight-mode
        run: |
          curl https://api.cloudflare.com/client/v4/zones/${{ secrets.EVFINDER_ZONE_ID }}/bot_management \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}" \
          -H "Content-Type:application/json" \
          -X PUT \
          --data-raw '{"fight_mode":false}'

      - name: Wait for GCP Cloud Build to succeed
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Build-EVFinder-App-From-PR (evfinder)"
          ref: ${{ github.event.pull_request.head.sha }}
          intervalSeconds: 30

      - name: Run Cypress Tests with Percy against Development environment
        if: steps.wait-for-build.outputs.conclusion == 'success'
        working-directory: ./app
        run: CYPRESS_BASE_URL=https://dev.theevfinder.com npx percy exec -- cypress run

      - name: Enable Cloudflare Bot Fight
        id: enable-bot-fight-mode
        run: |
          curl https://api.cloudflare.com/client/v4/zones/${{ secrets.EVFINDER_ZONE_ID }}/bot_management \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}" \
          -H "Content-Type:application/json" \
          -X PUT \
          --data-raw '{"fight_mode":true}'

      - name: Upload Screenshots and Video on Failure
        uses: actions/upload-artifact@v4
        # Only trigger if the previous step failed
        if: failure()
        with:
          name: failure-video
          path: |
            app/cypress/videos/
            app/cypress/screenshots/
